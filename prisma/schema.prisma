generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                      String                    @id @default(uuid())
  name                    String
  priceInCents            Int
  filePath                String?
  imagePath               String
  description             String
  isAvailableForPurchase  Boolean                   @default(true)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  orders                  OrderItem[]
  categoryId              String
  category                Category?                 @relation(fields: [categoryId], references: [id])
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  createdAt  DateTime  @default(now()) 
  updatedAt  DateTime  @updatedAt 
  orders     Order[]
}

model Order {
  id                String      @id @default(uuid())
  orderNumber       String      @unique
  userId            String?
  totalPriceInCents Int
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  user              User?       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items             OrderItem[]
  billingInfoId     String
  billingInfo       BillingInfo @relation(fields: [billingInfoId], references: [id])
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int      @default(1)

  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@unique([orderId, productId])
}

model DownloadVerification {
  id                  String    @id @default(uuid())
  expiresAt           DateTime
  createdAt           DateTime  @default(now())
}

model Category {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  isActive   Boolean     @default(true)
  products   Product[]
}

model BillingInfo {
  id              String   @id @default(uuid())
  firstName       String
  lastName        String
  companyName     String
  taxOrIdNumber   String?  // optional
  billingAddress  String
  apartment       String
  city            String
  district        String
  shippingAddress String?  // optional
  phone           String
  email           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  orders          Order[]
}
